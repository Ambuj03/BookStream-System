From 7ae862dabbec5b9380db64cd9e397f6cfb2a26a2 Mon Sep 17 00:00:00 2001
From: senku <mohakmalviya2000@gmail.com>
Date: Sat, 28 Jun 2025 18:18:59 +0530
Subject: [PATCH 3/6] =?UTF-8?q?=F0=9F=8F=A2=20Transform=20UI=20to=20Profes?=
 =?UTF-8?q?sional=20Corporate=20Design?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

üíº Professional Color Scheme:
‚Ä¢ Switched to corporate blue palette (#1e40af, #1e3a8a, #3b82f6, #0ea5e9)
‚Ä¢ Replaced flashy gradients with subtle corporate gradients
‚Ä¢ Professional typography with proper contrast ratios
‚Ä¢ Corporate-grade shadows and borders

üéØ Business-Focused Interactions:
‚Ä¢ Reduced animation intensity for professional appearance
‚Ä¢ Subtle hover effects (2px lift vs 15px)
‚Ä¢ Professional button styles with corporate colors
‚Ä¢ Minimal mouse interactions for business environment

üîß Refined 3D Effects:
‚Ä¢ Reduced particle counts (50‚Üí25‚Üí8 for corporate look)
‚Ä¢ Slower, more professional animations (0.0005 time factor)
‚Ä¢ Conservative positioning and gentle movements
‚Ä¢ Professional lighting with corporate blue tones

üìê Corporate Design System:
‚Ä¢ Comprehensive CSS custom properties for consistency
‚Ä¢ Professional spacing scale and border radius values
‚Ä¢ Corporate shadow system with refined opacity
‚Ä¢ Business-appropriate transition timings

üé® Enhanced Components:
‚Ä¢ Professional feature cards with subtle gradients
‚Ä¢ Corporate navigation with 99% opacity backdrop
‚Ä¢ Business-focused hero section with geometric patterns
‚Ä¢ Refined footer with subtle corporate patterns

‚ö° Performance & Accessibility:
‚Ä¢ Reduced complexity for better performance
‚Ä¢ Maintained accessibility with focus states
‚Ä¢ Professional responsive design for all devices
‚Ä¢ Reduced motion support for corporate environments

‚ú® Result: Enterprise-ready UI suitable for professional presentations
üìä Target: Corporate/Business stakeholders and enterprise clients
üé™ Confidence: Perfect for board meetings and professional demos
---
 bm_app/static/bm_app/css/landing-3d.css | 503 ++++++++++++++++--------
 bm_app/templates/bm_app/main.html       | 202 +++++-----
 2 files changed, 440 insertions(+), 265 deletions(-)

diff --git a/bm_app/static/bm_app/css/landing-3d.css b/bm_app/static/bm_app/css/landing-3d.css
index 1a3121a..7045668 100644
--- a/bm_app/static/bm_app/css/landing-3d.css
+++ b/bm_app/static/bm_app/css/landing-3d.css
@@ -3,47 +3,80 @@
    Modern Premium Look & Feel
    ======================================== */
 
-/* Google Fonts Import */
+/* Google Fonts Import - Professional Typography */
 @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Playfair+Display:wght@400;500;600;700&display=swap');
 
-/* CSS Custom Properties for Better Theming */
+/* Professional Corporate Design System */
 :root {
-    --primary-color: #2563eb;
-    --primary-dark: #1e40af;
+    /* Professional Color Palette - Corporate Blue */
+    --primary-color: #1e40af;
+    --primary-dark: #1e3a8a;
     --primary-light: #3b82f6;
-    --secondary-color: #7c3aed;
-    --accent-color: #f59e0b;
-    --success-color: #10b981;
-    --error-color: #ef4444;
-    
-    --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
-    --gradient-secondary: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
-    --gradient-accent: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
-    --gradient-warm: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
-    
-    --text-primary: #1e293b;
-    --text-secondary: #64748b;
+    --secondary-color: #0f172a;
+    --accent-color: #0ea5e9;
+    --success-color: #059669;
+    --warning-color: #d97706;
+    --error-color: #dc2626;
+    
+    /* Professional Gradients - Subtle & Corporate */
+    --gradient-primary: linear-gradient(135deg, #1e40af 0%, #1e3a8a 50%, #0f172a 100%);
+    --gradient-secondary: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
+    --gradient-accent: linear-gradient(135deg, #0ea5e9 0%, #0284c7 100%);
+    --gradient-hero: linear-gradient(135deg, #1e40af 0%, #1e3a8a 40%, #0f172a 100%);
+    
+    /* Professional Typography Colors */
+    --text-primary: #0f172a;
+    --text-secondary: #334155;
+    --text-tertiary: #64748b;
     --text-muted: #94a3b8;
+    --text-on-dark: #f8fafc;
+    --text-on-primary: #ffffff;
     
+    /* Professional Surfaces */
     --surface-primary: #ffffff;
     --surface-secondary: #f8fafc;
+    --surface-tertiary: #f1f5f9;
     --surface-elevated: #ffffff;
-    
-    --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
-    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
-    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
-    --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
-    --shadow-2xl: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
-    
-    --border-radius-sm: 6px;
-    --border-radius-md: 8px;
-    --border-radius-lg: 12px;
-    --border-radius-xl: 16px;
-    --border-radius-2xl: 24px;
-    
-    --transition-fast: 0.15s ease-out;
-    --transition-normal: 0.3s ease-out;
-    --transition-slow: 0.5s ease-out;
+    --surface-card: #ffffff;
+    --surface-overlay: rgba(15, 23, 42, 0.9);
+    
+    /* Professional Borders */
+    --border-color: #e2e8f0;
+    --border-hover: #cbd5e1;
+    --border-focus: #3b82f6;
+    --border-subtle: #f1f5f9;
+    
+    /* Corporate Shadows - Refined */
+    --shadow-xs: 0 1px 2px 0 rgba(15, 23, 42, 0.03);
+    --shadow-sm: 0 1px 3px 0 rgba(15, 23, 42, 0.06), 0 1px 2px 0 rgba(15, 23, 42, 0.04);
+    --shadow-md: 0 4px 6px -1px rgba(15, 23, 42, 0.08), 0 2px 4px -1px rgba(15, 23, 42, 0.04);
+    --shadow-lg: 0 10px 15px -3px rgba(15, 23, 42, 0.1), 0 4px 6px -2px rgba(15, 23, 42, 0.04);
+    --shadow-xl: 0 20px 25px -5px rgba(15, 23, 42, 0.12), 0 10px 10px -5px rgba(15, 23, 42, 0.04);
+    --shadow-2xl: 0 25px 50px -12px rgba(15, 23, 42, 0.15);
+    --shadow-inner: inset 0 2px 4px 0 rgba(15, 23, 42, 0.06);
+    
+    /* Professional Spacing Scale */
+    --space-1: 0.25rem;
+    --space-2: 0.5rem;
+    --space-3: 0.75rem;
+    --space-4: 1rem;
+    --space-6: 1.5rem;
+    --space-8: 2rem;
+    --space-12: 3rem;
+    --space-16: 4rem;
+    --space-20: 5rem;
+    
+    /* Professional Border Radius */
+    --radius-sm: 0.25rem;
+    --radius-md: 0.375rem;
+    --radius-lg: 0.5rem;
+    --radius-xl: 0.75rem;
+    --radius-2xl: 1rem;
+    
+    /* Professional Transitions */
+    --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
+    --transition-normal: 250ms cubic-bezier(0.4, 0, 0.2, 1);
+    --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);
 }
 
 /* 3D Canvas Base Styles */
@@ -116,11 +149,11 @@ body {
     width: 80%;
 }
 
-/* Enhanced Hero Section */
+/* Enhanced Hero Section - Professional Corporate Style */
 .hero {
     position: relative;
     overflow: hidden;
-    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
+    background: var(--gradient-hero);
     min-height: 100vh;
     display: flex;
     align-items: center;
@@ -134,9 +167,8 @@ body {
     right: 0;
     bottom: 0;
     background: 
-        radial-gradient(circle at 20% 30%, rgba(99, 102, 241, 0.15) 0%, transparent 50%),
-        radial-gradient(circle at 80% 70%, rgba(139, 92, 246, 0.15) 0%, transparent 50%),
-        radial-gradient(circle at 40% 90%, rgba(236, 72, 153, 0.1) 0%, transparent 50%);
+        radial-gradient(circle at 20% 30%, rgba(30, 64, 175, 0.1) 0%, transparent 50%),
+        radial-gradient(circle at 80% 70%, rgba(30, 58, 138, 0.08) 0%, transparent 50%);
     z-index: 1;
 }
 
@@ -147,8 +179,9 @@ body {
     left: 0;
     right: 0;
     bottom: 0;
-    background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.03'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
+    background: url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.02'%3E%3Cpath d='M40 40c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20zm20 0c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
     z-index: 1;
+    opacity: 0.4;
 }
 
 .hero-content, .hero-image {
@@ -193,20 +226,25 @@ body {
     max-width: 600px;
 }
 
-/* Enhanced Buttons */
+/* Professional Corporate Buttons */
 .btn-primary {
     background: var(--gradient-primary) !important;
     border: none !important;
-    padding: 14px 32px !important;
-    font-weight: 600 !important;
+    padding: 16px 32px !important;
     font-size: 1rem !important;
-    border-radius: var(--border-radius-lg) !important;
-    box-shadow: var(--shadow-lg) !important;
+    font-weight: 600 !important;
+    letter-spacing: 0.025em !important;
+    border-radius: var(--radius-lg) !important;
+    color: var(--text-on-primary) !important;
+    text-decoration: none !important;
+    display: inline-flex !important;
+    align-items: center !important;
+    justify-content: center !important;
     transition: all var(--transition-normal) !important;
+    box-shadow: var(--shadow-lg) !important;
     position: relative !important;
     overflow: hidden !important;
     text-transform: none !important;
-    letter-spacing: -0.01em !important;
 }
 
 .btn-primary::before {
@@ -230,16 +268,23 @@ body {
 }
 
 .btn-outline {
-    background: rgba(255, 255, 255, 0.1) !important;
-    border: 2px solid rgba(255, 255, 255, 0.3) !important;
-    color: white !important;
-    padding: 14px 32px !important;
-    font-weight: 600 !important;
+    background: transparent !important;
+    border: 2px solid var(--text-on-dark) !important;
+    padding: 14px 30px !important;
     font-size: 1rem !important;
-    border-radius: var(--border-radius-lg) !important;
-    backdrop-filter: blur(10px) !important;
+    font-weight: 600 !important;
+    letter-spacing: 0.025em !important;
+    border-radius: var(--radius-lg) !important;
+    color: var(--text-on-dark) !important;
+    text-decoration: none !important;
+    display: inline-flex !important;
+    align-items: center !important;
+    justify-content: center !important;
     transition: all var(--transition-normal) !important;
-    letter-spacing: -0.01em !important;
+    position: relative !important;
+    overflow: hidden !important;
+    backdrop-filter: blur(10px) !important;
+    text-transform: none !important;
 }
 
 .btn-outline:hover {
@@ -279,18 +324,18 @@ body {
     border-radius: 2px;
 }
 
-/* Enhanced Feature Cards */
+/* Professional Corporate Feature Cards */
 .feature-card-3d {
+    background: var(--surface-card);
+    border: 1px solid var(--border-color);
+    border-radius: var(--radius-xl);
+    padding: var(--space-8);
+    text-align: center;
     position: relative;
-    background: var(--surface-elevated);
-    border-radius: var(--border-radius-2xl);
-    padding: 2.5rem 2rem;
-    box-shadow: var(--shadow-lg);
-    backdrop-filter: blur(20px);
-    border: 1px solid rgba(255, 255, 255, 0.2);
+    z-index: 2;
+    box-shadow: var(--shadow-sm);
     transition: all var(--transition-normal);
-    transform-style: preserve-3d;
-    overflow: hidden;
+    backdrop-filter: blur(20px);
 }
 
 .feature-card-3d::before {
@@ -300,61 +345,60 @@ body {
     left: 0;
     right: 0;
     bottom: 0;
-    background: var(--gradient-primary);
+    background: var(--gradient-secondary);
     opacity: 0;
+    border-radius: inherit;
     transition: opacity var(--transition-normal);
     z-index: -1;
-    border-radius: var(--border-radius-2xl);
 }
 
 .feature-card-3d:hover::before {
-    opacity: 0.05;
+    opacity: 0.03;
 }
 
 .feature-card-3d:hover {
     transform: translateY(-8px);
-    box-shadow: var(--shadow-2xl);
+    box-shadow: var(--shadow-xl);
+    border-color: var(--border-hover);
 }
 
-/* Enhanced Feature Icons */
 .feature-card-3d .feature-icon {
-    width: 80px;
-    height: 80px;
-    background: var(--gradient-primary);
-    border-radius: var(--border-radius-2xl);
-    display: flex !important;
+    width: 72px;
+    height: 72px;
+    margin: 0 auto var(--space-6);
+    display: flex;
     align-items: center;
     justify-content: center;
-    margin-bottom: 2rem;
+    background: var(--gradient-secondary);
+    border-radius: var(--radius-xl);
     transition: all var(--transition-normal);
-    box-shadow: var(--shadow-md);
+    box-shadow: var(--shadow-sm);
 }
 
 .feature-card-3d .feature-icon svg {
     width: 32px;
     height: 32px;
-    color: white;
-    stroke-width: 2.5;
+    fill: var(--primary-color);
+    transition: all var(--transition-normal);
 }
 
 .feature-card-3d:hover .feature-icon {
-    transform: scale(1.1) rotate(5deg);
-    box-shadow: var(--shadow-xl);
+    transform: scale(1.1);
+    box-shadow: var(--shadow-md);
 }
 
 .feature-card-3d .feature-title {
-    font-family: 'Inter', sans-serif;
-    font-size: 1.5rem;
-    font-weight: 700;
+    font-size: var(--space-6);
+    font-weight: 600;
     color: var(--text-primary);
-    margin-bottom: 1rem;
-    letter-spacing: -0.01em;
+    margin-bottom: var(--space-4);
+    line-height: 1.3;
 }
 
 .feature-card-3d p {
     color: var(--text-secondary);
-    font-size: 1rem;
     line-height: 1.6;
+    font-size: 0.95rem;
     margin: 0;
 }
 
@@ -1152,21 +1196,17 @@ body {
 
 /* Magnetic button effect enhancement */
 .btn-primary:hover {
-    transform: translateY(-4px) scale(1.05) !important;
-    box-shadow: 
-        0 25px 50px rgba(102, 126, 234, 0.4),
-        0 12px 25px rgba(102, 126, 234, 0.2) !important;
-    filter: brightness(1.1);
+    transform: translateY(-2px) scale(1.02) !important;
+    box-shadow: var(--shadow-xl) !important;
+    filter: brightness(1.05) !important;
 }
 
 .btn-outline:hover {
-    transform: translateY(-4px) scale(1.05) !important;
-    box-shadow: 
-        0 25px 50px rgba(118, 75, 162, 0.3),
-        0 12px 25px rgba(118, 75, 162, 0.2) !important;
-    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color)) !important;
-    color: white !important;
-    border-color: transparent !important;
+    transform: translateY(-2px) scale(1.02) !important;
+    box-shadow: var(--shadow-lg) !important;
+    background: rgba(30, 64, 175, 0.9) !important;
+    color: var(--text-on-primary) !important;
+    border-color: var(--primary-color) !important;
 }
 
 /* Enhanced feature card animations */
@@ -1194,11 +1234,9 @@ body {
 }
 
 .feature-card-3d:hover {
-    transform: translateY(-15px) scale(1.04) !important;
-    box-shadow: 
-        0 30px 60px rgba(102, 126, 234, 0.15),
-        0 15px 30px rgba(0, 0, 0, 0.1),
-        inset 0 1px 0 rgba(255, 255, 255, 0.15) !important;
+    transform: translateY(-6px) !important;
+    box-shadow: var(--shadow-xl) !important;
+    border-color: var(--border-hover) !important;
 }
 
 /* Icon enhancement */
@@ -1207,55 +1245,46 @@ body {
 }
 
 .feature-card-3d:hover .feature-icon {
-    transform: scale(1.15) rotate(8deg) !important;
-    filter: brightness(1.2);
+    transform: scale(1.05) !important;
+    box-shadow: var(--shadow-md) !important;
 }
 
 /* Enhanced text animations */
 .feature-title {
-    background: linear-gradient(135deg, var(--text-primary), var(--primary-color));
-    -webkit-background-clip: text;
-    -webkit-text-fill-color: transparent;
-    background-clip: text;
-    transition: all 0.4s ease;
+    color: var(--text-primary) !important;
+    background: none !important;
+    -webkit-background-clip: unset !important;
+    -webkit-text-fill-color: unset !important;
 }
 
 .feature-card-3d:hover .feature-title {
-    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color), var(--accent-color));
-    -webkit-background-clip: text;
-    -webkit-text-fill-color: transparent;
-    background-clip: text;
-    transform: translateY(-3px);
+    color: var(--primary-color) !important;
+    background: none !important;
+    -webkit-background-clip: unset !important;
+    -webkit-text-fill-color: unset !important;
+    transform: none !important;
 }
 
 /* Floating animation for hero image */
 .hero-image {
-    animation: gentle-float 8s ease-in-out infinite;
+    animation: gentle-professional-float 12s ease-in-out infinite;
 }
 
-@keyframes gentle-float {
+@keyframes gentle-professional-float {
     0%, 100% {
-        transform: translateY(0px) rotate(0deg);
-    }
-    25% {
-        transform: translateY(-15px) rotate(1deg);
+        transform: translateY(0px);
     }
     50% {
-        transform: translateY(-10px) rotate(0deg);
-    }
-    75% {
-        transform: translateY(-5px) rotate(-0.5deg);
+        transform: translateY(-8px);
     }
 }
 
 /* Enhanced navbar with better backdrop blur */
 .navbar.scrolled {
-    background: rgba(255, 255, 255, 0.98) !important;
-    backdrop-filter: blur(25px) saturate(180%);
-    border-bottom: 1px solid rgba(102, 126, 234, 0.1);
-    box-shadow: 
-        0 10px 40px rgba(0, 0, 0, 0.1),
-        0 2px 8px rgba(102, 126, 234, 0.05) !important;
+    background: rgba(255, 255, 255, 0.99) !important;
+    backdrop-filter: blur(20px) saturate(120%);
+    border-bottom: 1px solid var(--border-color);
+    box-shadow: var(--shadow-md) !important;
 }
 
 /* Interactive navigation links */
@@ -1264,60 +1293,37 @@ body {
 }
 
 .nav-link::after {
-    height: 3px !important;
-    background: linear-gradient(90deg, var(--primary-color), var(--secondary-color)) !important;
-    border-radius: 2px;
-    transform: translateX(-50%);
+    height: 2px !important;
+    background: var(--primary-color) !important;
 }
 
 .nav-link:hover {
     color: var(--primary-color) !important;
-    transform: translateY(-2px);
+    transform: none !important;
 }
 
 /* Enhanced footer with animated pattern */
 .footer::before {
     background-image: 
-        radial-gradient(circle at 30px 30px, rgba(102, 126, 234, 0.05) 2px, transparent 2px),
-        radial-gradient(circle at 80px 80px, rgba(118, 75, 162, 0.05) 1px, transparent 1px);
-    background-size: 120px 120px, 60px 60px;
-    animation: pattern-drift 20s linear infinite;
-}
-
-@keyframes pattern-drift {
-    0% {
-        transform: translateX(0) translateY(0);
-    }
-    100% {
-        transform: translateX(60px) translateY(60px);
-    }
+        radial-gradient(circle at 40px 40px, rgba(30, 64, 175, 0.02) 2px, transparent 2px);
+    background-size: 80px 80px;
+    animation: none !important;
 }
 
 /* Pulse effect for important elements */
 .hero-cta .btn-primary {
-    animation: subtle-pulse 3s ease-in-out infinite;
-}
-
-@keyframes subtle-pulse {
-    0%, 100% {
-        box-shadow: 0 0 0 0 rgba(102, 126, 234, 0.4);
-    }
-    50% {
-        box-shadow: 0 0 0 20px rgba(102, 126, 234, 0);
-    }
+    animation: none !important;
 }
 
 /* Enhanced selection styling */
 ::selection {
-    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
-    color: white;
-    text-shadow: none;
+    background: var(--primary-color) !important;
+    color: var(--text-on-primary) !important;
 }
 
 ::-moz-selection {
-    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
-    color: white;
-    text-shadow: none;
+    background: var(--primary-color) !important;
+    color: var(--text-on-primary) !important;
 }
 
 /* Performance optimizations */
@@ -1401,4 +1407,177 @@ img[src] {
     .subtle-pulse {
         animation: none !important;
     }
+}
+
+/* ========================================
+   PROFESSIONAL CORPORATE OVERRIDES
+   ======================================== */
+
+/* Reduce flashy animations for professional appearance */
+.btn-primary:hover {
+    transform: translateY(-2px) scale(1.02) !important;
+    box-shadow: var(--shadow-xl) !important;
+    filter: brightness(1.05) !important;
+}
+
+.btn-outline:hover {
+    transform: translateY(-2px) scale(1.02) !important;
+    box-shadow: var(--shadow-lg) !important;
+    background: rgba(30, 64, 175, 0.9) !important;
+    color: var(--text-on-primary) !important;
+    border-color: var(--primary-color) !important;
+}
+
+/* Professional feature card hover effects */
+.feature-card-3d:hover {
+    transform: translateY(-6px) !important;
+    box-shadow: var(--shadow-xl) !important;
+    border-color: var(--border-hover) !important;
+}
+
+/* Subtle icon animations */
+.feature-card-3d:hover .feature-icon {
+    transform: scale(1.05) !important;
+    box-shadow: var(--shadow-md) !important;
+}
+
+/* Professional text gradients */
+.feature-title {
+    color: var(--text-primary) !important;
+    background: none !important;
+    -webkit-background-clip: unset !important;
+    -webkit-text-fill-color: unset !important;
+}
+
+.feature-card-3d:hover .feature-title {
+    color: var(--primary-color) !important;
+    background: none !important;
+    -webkit-background-clip: unset !important;
+    -webkit-text-fill-color: unset !important;
+    transform: none !important;
+}
+
+/* Professional hero image animation */
+.hero-image {
+    animation: gentle-professional-float 12s ease-in-out infinite;
+}
+
+@keyframes gentle-professional-float {
+    0%, 100% {
+        transform: translateY(0px);
+    }
+    50% {
+        transform: translateY(-8px);
+    }
+}
+
+/* Corporate navbar styling */
+.navbar.scrolled {
+    background: rgba(255, 255, 255, 0.99) !important;
+    backdrop-filter: blur(20px) saturate(120%);
+    border-bottom: 1px solid var(--border-color);
+    box-shadow: var(--shadow-md) !important;
+}
+
+/* Professional navigation links */
+.nav-link:hover {
+    color: var(--primary-color) !important;
+    transform: none !important;
+}
+
+.nav-link::after {
+    height: 2px !important;
+    background: var(--primary-color) !important;
+}
+
+/* Subtle footer pattern */
+.footer::before {
+    background-image: 
+        radial-gradient(circle at 40px 40px, rgba(30, 64, 175, 0.02) 2px, transparent 2px);
+    background-size: 80px 80px;
+    animation: none !important;
+}
+
+/* Professional pulse effect */
+.hero-cta .btn-primary {
+    animation: none !important;
+}
+
+/* Tone down gradient animations */
+.feature-card-3d {
+    background: var(--surface-card) !important;
+    border: 1px solid var(--border-color) !important;
+    animation: none !important;
+}
+
+/* Professional selection styling */
+::selection {
+    background: var(--primary-color) !important;
+    color: var(--text-on-primary) !important;
+}
+
+::-moz-selection {
+    background: var(--primary-color) !important;
+    color: var(--text-on-primary) !important;
+}
+
+/* Corporate spacing and typography */
+.hero-title {
+    font-weight: 700;
+    letter-spacing: -0.025em;
+}
+
+.hero-subtitle {
+    font-weight: 400;
+    opacity: 0.95;
+}
+
+.section-title {
+    color: var(--text-primary);
+    font-weight: 700;
+}
+
+.section-title::after {
+    background: var(--gradient-primary);
+}
+
+/* Professional about section */
+.about {
+    background: var(--surface-secondary);
+    background-attachment: scroll !important;
+}
+
+.about-content {
+    background: var(--surface-card);
+    border: 1px solid var(--border-color);
+    box-shadow: var(--shadow-sm);
+}
+
+/* Corporate footer */
+.footer {
+    background: var(--secondary-color) !important;
+}
+
+/* Professional responsive adjustments */
+@media (max-width: 768px) {
+    .feature-card-3d:hover {
+        transform: translateY(-3px) !important;
+        box-shadow: var(--shadow-lg) !important;
+    }
+    
+    .btn-primary:hover,
+    .btn-outline:hover {
+        transform: none !important;
+    }
+}
+
+/* Remove excessive effects on small screens */
+@media (max-width: 480px) {
+    .hero-image {
+        animation: none !important;
+    }
+    
+    .feature-card-3d:hover {
+        transform: none !important;
+    }
 } 
\ No newline at end of file
diff --git a/bm_app/templates/bm_app/main.html b/bm_app/templates/bm_app/main.html
index 41bac01..6afb9ad 100644
--- a/bm_app/templates/bm_app/main.html
+++ b/bm_app/templates/bm_app/main.html
@@ -214,7 +214,7 @@
         let featuresScene, featuresCamera, featuresRenderer;
         let mouseX = 0, mouseY = 0;
 
-        // Initialize Hero 3D Background
+        // Initialize Hero 3D Background - Professional Version
         function initHero3D() {
             // Skip 3D initialization on small screens
             if (window.innerWidth <= 480) return;
@@ -224,75 +224,71 @@
             
             const container = canvas.parentElement;
             
-            // Scene setup
+            // Scene setup with professional parameters
             heroScene = new THREE.Scene();
-            heroCamera = new THREE.PerspectiveCamera(75, container.offsetWidth / container.offsetHeight, 0.1, 1000);
+            heroCamera = new THREE.PerspectiveCamera(60, container.offsetWidth / container.offsetHeight, 0.1, 1000);
             heroRenderer = new THREE.WebGLRenderer({ 
                 canvas: canvas, 
                 alpha: true,
-                antialias: window.devicePixelRatio <= 1, // Disable antialiasing on high DPI for performance
+                antialias: window.devicePixelRatio <= 1,
                 powerPreference: "high-performance"
             });
             heroRenderer.setSize(container.offsetWidth, container.offsetHeight);
             heroRenderer.setClearColor(0x000000, 0);
 
-            // Adjust particle count based on screen size
-            let particleCount = 50;
-            if (window.innerWidth <= 768) particleCount = 25;
+            // Reduced particle count for professional look
+            let particleCount = 25;
+            if (window.innerWidth <= 768) particleCount = 15;
             if (window.innerWidth <= 480) particleCount = 0;
             
-            const colors = [0x667eea, 0x764ba2, 0x667eea, 0x764ba2];
+            // Professional blue color palette
+            const colors = [0x1e40af, 0x1e3a8a, 0x3b82f6, 0x0ea5e9];
             
             for (let i = 0; i < particleCount; i++) {
-                // Create book-like geometry
+                // Smaller, more subtle book particles
                 const geometry = new THREE.BoxGeometry(
-                    Math.random() * 0.3 + 0.1,
-                    Math.random() * 0.4 + 0.2,
-                    Math.random() * 0.05 + 0.02
+                    Math.random() * 0.3 + 0.2,
+                    Math.random() * 0.4 + 0.3,
+                    Math.random() * 0.1 + 0.05
                 );
                 
                 const material = new THREE.MeshPhongMaterial({
                     color: colors[Math.floor(Math.random() * colors.length)],
                     transparent: true,
-                    opacity: 0.7
+                    opacity: 0.4
                 });
                 
                 const particle = new THREE.Mesh(geometry, material);
                 
-                // Random positioning
-                particle.position.x = (Math.random() - 0.5) * 20;
-                particle.position.y = (Math.random() - 0.5) * 10;
-                particle.position.z = (Math.random() - 0.5) * 10;
+                // More conservative positioning
+                particle.position.x = (Math.random() - 0.5) * 8;
+                particle.position.y = (Math.random() - 0.5) * 6;
+                particle.position.z = (Math.random() - 0.5) * 4;
                 
-                // Random rotation
-                particle.rotation.x = Math.random() * Math.PI;
-                particle.rotation.y = Math.random() * Math.PI;
-                particle.rotation.z = Math.random() * Math.PI;
-                
-                // Store initial position and random properties
                 particle.userData = {
                     initialX: particle.position.x,
                     initialY: particle.position.y,
-                    rotationSpeed: Math.random() * 0.02 + 0.01,
-                    floatSpeed: Math.random() * 0.02 + 0.01
+                    initialZ: particle.position.z,
+                    rotationSpeed: Math.random() * 0.005 + 0.002, // Slower rotation
+                    floatSpeed: Math.random() * 0.8 + 0.5
                 };
                 
-                heroParticles.push(particle);
                 heroScene.add(particle);
+                heroParticles.push(particle);
             }
 
-            // Add lighting
+            // Professional lighting setup
             const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);
             heroScene.add(ambientLight);
             
-            const directionalLight = new THREE.DirectionalLight(0x417690, 0.8);
-            directionalLight.position.set(5, 5, 5);
+            const directionalLight = new THREE.DirectionalLight(0x1e40af, 0.4);
+            directionalLight.position.set(2, 2, 2);
             heroScene.add(directionalLight);
 
-            heroCamera.position.z = 5;
+            heroCamera.position.z = 6;
         }
 
-        // Initialize Features 3D Background
+        // Initialize Features 3D Background - Professional Version
         function initFeatures3D() {
             // Skip 3D initialization on small screens
             if (window.innerWidth <= 480) return;
@@ -302,115 +298,116 @@
             
             const container = canvas.parentElement;
             
+            // Professional scene setup
             featuresScene = new THREE.Scene();
-            featuresCamera = new THREE.PerspectiveCamera(75, container.offsetWidth / container.offsetHeight, 0.1, 1000);
+            featuresCamera = new THREE.PerspectiveCamera(60, container.offsetWidth / container.offsetHeight, 0.1, 1000);
             featuresRenderer = new THREE.WebGLRenderer({ 
                 canvas: canvas, 
                 alpha: true,
-                antialias: window.devicePixelRatio <= 1, // Disable antialiasing on high DPI for performance
+                antialias: window.devicePixelRatio <= 1,
                 powerPreference: "high-performance"
             });
             featuresRenderer.setSize(container.offsetWidth, container.offsetHeight);
             featuresRenderer.setClearColor(0x000000, 0);
 
-            // Create geometric connections
+            // Subtle connecting lines - professional style
             const points = [];
-            for (let i = 0; i < 20; i++) {
+            for (let i = 0; i < 8; i++) {
                 points.push(new THREE.Vector3(
-                    (Math.random() - 0.5) * 15,
-                    (Math.random() - 0.5) * 8,
-                    (Math.random() - 0.5) * 5
+                    (Math.random() - 0.5) * 6,
+                    (Math.random() - 0.5) * 4,
+                    (Math.random() - 0.5) * 2
                 ));
             }
 
-            // Create lines connecting points
             for (let i = 0; i < points.length - 1; i++) {
                 const geometry = new THREE.BufferGeometry().setFromPoints([points[i], points[i + 1]]);
                 const material = new THREE.LineBasicMaterial({
-                    color: 0x417690,
+                    color: 0x1e40af,
                     transparent: true,
-                    opacity: 0.3
+                    opacity: 0.15
                 });
                 const line = new THREE.Line(geometry, material);
                 featuresScene.add(line);
             }
 
-            // Add elegant floating orbs instead of geometric shapes
-            for (let i = 0; i < 12; i++) {
-                const geometry = new THREE.SphereGeometry(0.15, 16, 16);
+            // Professional floating orbs - corporate blue theme
+            for (let i = 0; i < 8; i++) {
+                const geometry = new THREE.SphereGeometry(0.12, 12, 12);
                 const material = new THREE.MeshPhongMaterial({
-                    color: new THREE.Color().setHSL(0.65 + Math.random() * 0.1, 0.7, 0.6),
+                    color: new THREE.Color().setHSL(0.6, 0.5, 0.6),
                     transparent: true,
-                    opacity: 0.6,
-                    emissive: new THREE.Color().setHSL(0.65 + Math.random() * 0.1, 0.3, 0.1)
+                    opacity: 0.5,
+                    emissive: new THREE.Color().setHSL(0.6, 0.3, 0.1)
                 });
                 
                 const orb = new THREE.Mesh(geometry, material);
-                orb.position.x = (Math.random() - 0.5) * 10;
-                orb.position.y = (Math.random() - 0.5) * 5;
-                orb.position.z = (Math.random() - 0.5) * 3;
+                orb.position.x = (Math.random() - 0.5) * 8;
+                orb.position.y = (Math.random() - 0.5) * 4;
+                orb.position.z = (Math.random() - 0.5) * 2;
                 
                 orb.userData = {
                     initialX: orb.position.x,
                     initialY: orb.position.y,
                     initialZ: orb.position.z,
-                    speed: Math.random() * 0.02 + 0.01,
-                    amplitude: Math.random() * 0.5 + 0.3
+                    speed: Math.random() * 0.015 + 0.008, // Slower movement
+                    amplitude: Math.random() * 0.3 + 0.2  // Smaller amplitude
                 };
                 
                 featuresScene.add(orb);
             }
 
-            // Add lighting
+            // Professional lighting
             const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
             featuresScene.add(ambientLight);
             
-            const directionalLight = new THREE.DirectionalLight(0x417690, 0.6);
-            directionalLight.position.set(3, 3, 3);
+            const directionalLight = new THREE.DirectionalLight(0x1e40af, 0.5);
+            directionalLight.position.set(2, 2, 2);
             featuresScene.add(directionalLight);
 
             featuresCamera.position.z = 4;
         }
 
-        // Animation loop
+        // Professional Animation Loop - Subtle Corporate Effects
         function animate() {
             requestAnimationFrame(animate);
 
-            const time = Date.now() * 0.001;
+            const time = Date.now() * 0.0005; // Slower time factor for subtle animations
 
-            // Animate hero particles
+            // Professional hero particles animation
             if (heroParticles.length > 0) {
                 heroParticles.forEach(particle => {
-                    particle.rotation.x += particle.userData.rotationSpeed;
-                    particle.rotation.y += particle.userData.rotationSpeed;
+                    // Subtle rotation
+                    particle.rotation.x += particle.userData.rotationSpeed * 0.5;
+                    particle.rotation.y += particle.userData.rotationSpeed * 0.3;
                     
-                    // Floating motion
-                    particle.position.y = particle.userData.initialY + Math.sin(time + particle.userData.initialX) * 0.5;
+                    // Gentle floating motion
+                    particle.position.y = particle.userData.initialY + Math.sin(time + particle.userData.initialX) * 0.3;
                     
-                    // Mouse interaction
-                    particle.position.x = particle.userData.initialX + (mouseX * 0.0005);
-                    particle.position.z += (mouseY * 0.0005 - particle.position.z) * 0.05;
+                    // Minimal mouse interaction for professionalism
+                    particle.position.x = particle.userData.initialX + (mouseX * 0.0002);
+                    particle.position.z += (mouseY * 0.0002 - particle.position.z) * 0.02;
                 });
 
                 heroRenderer.render(heroScene, heroCamera);
             }
 
-            // Animate features elements with smooth floating orbs
+            // Professional features elements animation
             if (featuresScene) {
                 featuresScene.children.forEach(child => {
                     if (child.userData && child.userData.speed) {
-                        // Smooth sine wave floating motion
+                        // Smooth, subtle floating motion
                         child.position.y = child.userData.initialY + Math.sin(time * child.userData.speed) * child.userData.amplitude;
-                        child.position.x = child.userData.initialX + Math.cos(time * child.userData.speed * 0.7) * (child.userData.amplitude * 0.5);
+                        child.position.x = child.userData.initialX + Math.cos(time * child.userData.speed * 0.8) * (child.userData.amplitude * 0.3);
                         
-                        // Subtle rotation for elegance
-                        child.rotation.x += 0.005;
-                        child.rotation.y += 0.003;
+                        // Very subtle rotation
+                        child.rotation.x += 0.002;
+                        child.rotation.y += 0.001;
                         
                         // Gentle pulsing glow effect
                         if (child.material && child.material.emissive) {
-                            const glowIntensity = 0.1 + Math.sin(time * 2 + child.userData.initialX) * 0.05;
-                            child.material.emissive.setHSL(0.65 + Math.sin(time) * 0.05, 0.3, glowIntensity);
+                            const glowIntensity = 0.08 + Math.sin(time * 1.5 + child.userData.initialX) * 0.02;
+                            child.material.emissive.setHSL(0.6, 0.3, glowIntensity);
                         }
                     }
                 });
@@ -584,51 +581,50 @@
 
 
 
-        // Enhanced particle background system
+        // Professional Corporate Particle System
         function addParticleBackground() {
             const featuresSection = document.querySelector('.features-3d-container');
             const heroSection = document.querySelector('.hero');
             if (!featuresSection) return;
 
-            // Features section particles - more elegant
-            for (let i = 0; i < 15; i++) {
+            // Features section particles - professional corporate style
+            for (let i = 0; i < 8; i++) {
                 const particle = document.createElement('div');
-                const size = Math.random() * 6 + 2;
-                const hue = 250 + Math.random() * 40; // Purple-blue range
+                const size = Math.random() * 4 + 2;
                 
                 particle.style.cssText = `
                     position: absolute;
                     width: ${size}px;
                     height: ${size}px;
-                    background: radial-gradient(circle, hsla(${hue}, 70%, 60%, 0.8), hsla(${hue}, 70%, 60%, 0));
+                    background: radial-gradient(circle, rgba(30, 64, 175, 0.6), rgba(30, 64, 175, 0));
                     border-radius: 50%;
                     left: ${Math.random() * 100}%;
                     top: ${Math.random() * 100}%;
-                    animation: elegant-float ${Math.random() * 15 + 10}s ease-in-out infinite;
-                    animation-delay: ${Math.random() * 5}s;
+                    animation: professional-float ${Math.random() * 20 + 15}s ease-in-out infinite;
+                    animation-delay: ${Math.random() * 8}s;
                     pointer-events: none;
-                    filter: blur(1px);
+                    filter: blur(0.5px);
                     z-index: 1;
                 `;
                 featuresSection.appendChild(particle);
             }
 
-            // Hero section ambient particles
+            // Hero section ambient particles - corporate blue theme
             if (heroSection) {
-                for (let i = 0; i < 8; i++) {
+                for (let i = 0; i < 5; i++) {
                     const particle = document.createElement('div');
-                    const size = Math.random() * 8 + 3;
+                    const size = Math.random() * 6 + 3;
                     
                     particle.style.cssText = `
                         position: absolute;
                         width: ${size}px;
                         height: ${size}px;
-                        background: radial-gradient(circle, rgba(102, 126, 234, 0.3), transparent);
+                        background: radial-gradient(circle, rgba(30, 64, 175, 0.3), transparent);
                         border-radius: 50%;
                         left: ${Math.random() * 100}%;
                         top: ${Math.random() * 100}%;
-                        animation: ambient-drift ${Math.random() * 20 + 15}s linear infinite;
-                        animation-delay: ${Math.random() * 8}s;
+                        animation: corporate-drift ${Math.random() * 30 + 25}s linear infinite;
+                        animation-delay: ${Math.random() * 10}s;
                         pointer-events: none;
                         z-index: 1;
                     `;
@@ -637,43 +633,43 @@
             }
         }
 
-        // Add CSS animations for particles
+        // Professional CSS animations for particles
         function addParticleAnimations() {
             const style = document.createElement('style');
             style.textContent = `
-                @keyframes elegant-float {
+                @keyframes professional-float {
                     0%, 100% {
                         transform: translateY(0px) translateX(0px) scale(1);
-                        opacity: 0.3;
+                        opacity: 0.2;
                     }
                     25% {
-                        transform: translateY(-20px) translateX(10px) scale(1.1);
-                        opacity: 0.6;
+                        transform: translateY(-15px) translateX(8px) scale(1.05);
+                        opacity: 0.4;
                     }
                     50% {
-                        transform: translateY(-10px) translateX(-5px) scale(0.9);
-                        opacity: 0.8;
+                        transform: translateY(-8px) translateX(-5px) scale(0.95);
+                        opacity: 0.6;
                     }
                     75% {
-                        transform: translateY(-30px) translateX(-10px) scale(1.05);
-                        opacity: 0.4;
+                        transform: translateY(-20px) translateX(-8px) scale(1.02);
+                        opacity: 0.3;
                     }
                 }
 
-                @keyframes ambient-drift {
+                @keyframes corporate-drift {
                     0% {
-                        transform: translateX(-100px) translateY(100vh) scale(0);
+                        transform: translateX(-50px) translateY(100vh) scale(0);
                         opacity: 0;
                     }
-                    10% {
-                        opacity: 0.3;
+                    15% {
+                        opacity: 0.2;
                         transform: scale(1);
                     }
-                    90% {
+                    85% {
                         opacity: 0.1;
                     }
                     100% {
-                        transform: translateX(100px) translateY(-100px) scale(0);
+                        transform: translateX(50px) translateY(-50px) scale(0);
                         opacity: 0;
                     }
                 }
-- 
2.34.1

