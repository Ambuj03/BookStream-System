# Generated by Django 5.1.8 on 2025-04-19 10:35

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BooksCategory',
            fields=[
                ('bookscategory_id', models.AutoField(primary_key=True, serialize=False)),
                ('bookscategory_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('customer_city', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_remarks', models.TextField(blank=True, null=True)),
                ('Date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False)),
                ('book_name', models.CharField(max_length=200)),
                ('book_author', models.CharField(blank=True, max_length=100, null=True)),
                ('book_language', models.CharField(max_length=50)),
                ('book_price', models.IntegerField()),
                ('book_category', models.ForeignKey(blank=True, db_column='book_category', null=True, on_delete=django.db.models.deletion.CASCADE, to='bm_app.bookscategory', to_field='bookscategory_name')),
            ],
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('distributor_id', models.AutoField(primary_key=True, serialize=False)),
                ('distributor_name', models.CharField(max_length=100)),
                ('distributor_email', models.EmailField(max_length=254, unique=True)),
                ('distributor_phonenumber', models.CharField(db_column='distributor_phoneNumber', max_length=15)),
                ('distributor_address', models.TextField(blank=True, null=True)),
                ('distributor_age', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='distributor_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookAllocation',
            fields=[
                ('allocation_id', models.AutoField(primary_key=True, serialize=False)),
                ('allocation_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('distributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bm_app.distributor')),
            ],
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('donation_id', models.AutoField(primary_key=True, serialize=False)),
                ('donation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('donation_amount', models.IntegerField()),
                ('donation_purpose', models.CharField(blank=True, max_length=100, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='bm_app.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('receipt_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('paymentMode', models.CharField(choices=[('ONLINE', 'ONLINE'), ('CASH', 'CASH')], db_column='paymentMode', max_length=6, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('notification_sent', models.BooleanField(default=False)),
                ('notification_status', models.CharField(default='PENDING', max_length=50)),
                ('notification_timestamp', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(db_column='customer_id', on_delete=django.db.models.deletion.CASCADE, to='bm_app.customer')),
                ('distributor', models.ForeignKey(db_column='distributor_id', on_delete=django.db.models.deletion.CASCADE, to='bm_app.distributor')),
                ('donation', models.ForeignKey(db_column='donation_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='bm_app.donation')),
            ],
        ),
        migrations.CreateModel(
            name='Temple',
            fields=[
                ('temple_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReceiptBooks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('book_name', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
                ('book_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('receipt', models.ForeignKey(db_column='receipt_id', on_delete=django.db.models.deletion.CASCADE, to='bm_app.receipt')),
                ('temple', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple')),
            ],
        ),
        migrations.AddField(
            model_name='receipt',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_type', models.CharField(max_length=11)),
                ('user_id', models.IntegerField()),
                ('message', models.TextField()),
                ('event_type', models.CharField(max_length=9)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(default='Unread', max_length=6)),
                ('temple', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple')),
            ],
        ),
        migrations.CreateModel(
            name='MasterInventory',
            fields=[
                ('inventory_id', models.AutoField(primary_key=True, serialize=False)),
                ('stock', models.IntegerField(default=0)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='bm_app.books')),
                ('temple', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple')),
            ],
        ),
        migrations.AddField(
            model_name='donation',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple'),
        ),
        migrations.CreateModel(
            name='DistributorBooks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_name', models.CharField(max_length=200)),
                ('book_author', models.CharField(max_length=100)),
                ('book_language', models.CharField(max_length=50)),
                ('book_price', models.IntegerField()),
                ('book_category', models.CharField(max_length=100)),
                ('book_stock', models.IntegerField()),
                ('distributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bm_app.distributor')),
                ('temple', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple')),
            ],
        ),
        migrations.AddField(
            model_name='distributor',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple'),
        ),
        migrations.AddField(
            model_name='customer',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple'),
        ),
        migrations.AddField(
            model_name='bookscategory',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple'),
        ),
        migrations.AddField(
            model_name='books',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple'),
        ),
        migrations.CreateModel(
            name='BookAllocationDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('price', models.IntegerField()),
                ('allocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bm_app.bookallocation')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bm_app.books')),
                ('temple', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple')),
            ],
        ),
        migrations.AddField(
            model_name='bookallocation',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bm_app.temple'),
        ),
    ]
